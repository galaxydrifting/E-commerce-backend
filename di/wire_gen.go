// Code generated by Wire. DO NOT EDIT.

//go:build !wireinject
// +build !wireinject

package di

import (
	"e-commerce/configs"
	"e-commerce/controllers"
	"e-commerce/middlewares"
	"e-commerce/repository"
	"e-commerce/services"
	"gorm.io/gorm"
)

// Container 定義應用程式的依賴注入容器
type Container struct {
	DB             *gorm.DB
	AuthController *controllers.AuthController
	AuthMiddleware *middlewares.AuthMiddleware
}

// provideDB 提供数据库实例
func provideDB(envFile string) *configs.Database {
	return configs.ConnectDB(envFile)
}

// Initialize 初始化應用程式依賴
func Initialize(envFile string) (*Container, error) {
	database := provideDB(envFile)
	userRepository := repository.NewGormUserRepository(database.DB)
	authService := services.NewAuthService(userRepository)
	authController := controllers.NewAuthController(authService)
	authMiddleware := middlewares.NewAuthMiddleware(database, authService)
	container := &Container{
		DB:             database.DB,
		AuthController: authController,
		AuthMiddleware: authMiddleware,
	}
	return container, nil
}